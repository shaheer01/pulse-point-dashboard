version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: analytics_db
    environment:
      POSTGRES_DB: analytics
      POSTGRES_USER: analytics_user
      POSTGRES_PASSWORD: analytics_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - analytics_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U analytics_user -d analytics"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: analytics_backend
    environment:
      DATABASE_URL: postgresql://analytics_user:analytics_password@db:5432/analytics
      SECRET_KEY: your-secret-key-change-in-production
      REDIS_URL: redis://redis:6379/0
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - analytics_network
    volumes:
      - ./backend:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: analytics_frontend
    environment:
      REACT_APP_API_URL: https://38c74afa6763.ngrok-free.app
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - analytics_network
    volumes:
      - ./frontend:/app
      - /app/node_modules
    stdin_open: true
    tty: true

  redis:
    image: redis:7-alpine
    container_name: analytics_redis
    ports:
      - "6379:6379"
    networks:
      - analytics_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  analytics_network:
    driver: bridge
